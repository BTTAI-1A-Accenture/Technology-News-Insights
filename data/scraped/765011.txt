There is a persistent income gap between students taking computer science classes in high school and those who aren’t. That’s a problem because it means a lot of students aren’t getting the opportunity to learn skills that are in high-demand in the workforce. Even though teens from low-income families represent 52 percent of high school students, they make up just 36 percent of those taking foundational computer science courses, according to a 2022 report by Code.org, a nonprofit working to expand access to computer science in schools. What can schools do to remove the barriers to computer science classes for those kids?  This is a problem the Katy Independent School District in Texas has been trying to tackle after seeing that national discrepancy reflected in its own computer science course enrollments.  Kristi Archer, the career and technical education instructional specialist for the 93,000-student district near Houston, and Susan Hoyt, a computer science teacher, have been leading the district’s work on making computer science more accessible to all students. They recently shared what they have learned with other educators at the Texas Computer Education Association convention in San Antonio. Here are 5 key takeaways from their work: Don’t make introductory classes contingent on hard-to-master prerequisites, say Archer and Hoyt. Students in their district were originally required to take algebra I before they could enroll in the introduction to computer science class their freshman year, which meant they had to take algebra in middle school. That was locking a lot of students out.  “Just because they don’t have algebra I doesn’t mean they should lose out on coding,” said Hoyt, who said algebra I concepts can be incorporated into introductory computer science instruction. They also found that how they named the course mattered. Archer and Hoyt changed the name from fundamentals in coding to introduction to coding because they worried parents would see the word “fundamentals” and mistake it for special education and not want their children to enroll. Katy ISD initially offered only one computer science course that was not in the Advanced Placement track. Hoyt says that AP computer science classes can be a deterrent to kids who aren’t sure if they want to go to a four-year college after graduating from high school. “They actually seek out the courses that give them a certification over taking an AP exam,” she said, because they don’t know they will need the college credit. Adding certifications to certain courses has other benefits, said Archer. It helped her implement standards and continuity across campuses and to bolster the district’s career and technical education offerings. It’s important for students to feel like they have something to progress into after taking an introduction to computer science class. So, the district is adding course options to engage a broader range of students, such as a computer science II course that is similar to its original AP offering but not focused as much on learning to write code to perform well on the AP exam, said Hoyt.  “They’re using the same concepts, but it’s more of a focus on: here’s some mixed-up code, get it in order, show us you understand this stuff, rather than writing it,” she said. She also added a course on Unity, a popular platform used in developing games for mobile Apple and Android operating systems. The course, said Hoyt, gives students—especially those who aren’t as excited about coding—the chance to design in 2D and 3D. The district is also adding an advanced cloud computing course in the 2023-24 school year, which Hoyt says a lot of parents who work at the nearby Amazon location are excited about. In order for students to take computer science courses like coding, they have to truly understand what they are and know that those opportunities exist in their school, say Archer and Hoyt. Teachers must connect coding with students’ day-to-day lives: explain to students that coding undergirds everything from games like Minecraft to smart speakers like Alexa. “Many kids have no idea what coding actually means, but the teachers are good at connecting it with stuff in their world,” said Archer.  Archer and Hoyt also found that they needed to get creative about advertising their computer science offerings. Hoyt has become a regular at school career fairs where she sets up a booth. She strategically deploys swag—in this case, rubber ducks—to lure students over to her table, curious to know why it’s covered in rubber ducks. This opens up an opportunity for Hoyt to talk about coding and computer science. Students who take computer science classes also get their own rubber ducks, which teachers encourage them to use as a problem-solving tool. The idea is to talk to the duck when they’re stuck to help them work through challenges. (It’s called rubber duck debugging and it’s a trouble-shooting trick popular with programmers.) The duck thing has taken on a life of its own, Hoyt says. One teacher has a pond students can float their ducks in. Hoyt herself now issues adoption certificates to students when they get their ducks. And as the students walk around school with their ducks, they’re constantly advertising for Hoyt’s computer science classes, as more students ask about the ducks and learn where they can get them. More courses and more students create the need for more computer science teachers in the Katy district. But finding computer science teachers to hire can be tough. The district is addressing this conundrum by starting an initiative to get teachers already working there certified to teach computer science courses.  Archer and Hoyt are building a course for teachers that will give them all the skills and knowledge they need to get certified, so they have a larger bench of instructors to teach at least the entry-level computer science courses.