Community driven content discussing all aspects of software development from DevOps to design patterns. If you’re a junior developer on your first project, you’ll likely encounter a variety of technology acronyms, italicizations and abbreviations you’ve never heard before. Is the confusing term you just heard, something everyone’s expected to know? That can be an intimidating situation. Moreover, it can be embarrassing for a junior dev to ask for clarification on what a software abbreviation or technical acronym means. To help alleviate some embarrassment on your first software development project, here are explanations of the meaning of several technical acronyms: This technology acronym actually means: Keep it simple, stupid. Don’t worry, the term is (almost always) said in jest. Despite the use of the word stupid, this programming acronym is not intended as an insult. Inexperienced developers often overdesign a system and deliver an increment of work that is far more complicated than it needs to be. In such cases, it would be better for them to use the KISS method, and keep it simple. It’s difficult for a developer to write code and not envision multiple, optional, ways to reuse that code in the future. This can lead the developer to add methods, functions and Java constructors that aren’t required today, but possibly needed in the future. That’s a bad practice. Don’t write methods or functions you think you might need someday. This is a waste of time, because more often than not you ain’t gonna need it (YAGNI). When the manager asks you to work some overtime to write some in-depth documentation, you can hit them with this technical acronym. The production of superfluous documentation for users can be a genuine waste of time, because the reality is they ain’t gonna read it (TAGRI). Don’t copy and paste code, and don’t create a bunch of functions that do essentially the same thing. Write code that is concise, reusable, modular and abstract enough that it can be called in multiple places throughout your program. Keep your code DRY. Don’t repeat yourself. https://twitter.com/scrumtuous/status/1597034850682290177?s=20&t=tGgcu8ab3aXpjcdMZ6kaEg Abstraction is often used to implement the DRY principle. Unfortunately, poorly implemented abstractions added early into the codebase can cause serious headaches when changes must be made in the future. Some software architects like to be WET before they are DRY. In other words, encourage developers to write everything twice until the codebase is established, and the benefit of using abstractions is completely clear. The SOLID acronym refers to the following five, object-oriented software development principles and best practices: Enforce these principles, and your applications will be more reliable and more easily maintained. SOLID is a commonly used technical acronym that software developers use to describe best practices. It can be difficult to map object-oriented code in a Java program to tables and records in a database. To alleviate the object-relational impedance mismatch, many database driven applications rely on object relational mapping and use an ORM tool such as Hibernate, JPA or Toplink to bridge the gap. Also known as a fencepost error, an off-by-one-error (OBOE) occurs when conditional logic within a loop uses a less-than operator, or < , rather than a less-than-and-equal-to operator, or ≤. This causes a loop to either exit one iteration too early, or leave one iteration too soon — thus, the reference to the off-by-one-error. A proof of concept (POC) provides a working piece of software that proves an idea or a vision is feasible. A POC only needs to implement happy-path programming, which essentially means tightly controlled code intended to achieve desired functionality with no errors. There is no need for a polished UI. At this stage, the app won’t be launched at customers. A POC is just used internally to prove that a given idea or product is doable. A POC is an italicization of the words proof of concept. In sports, an MVP is the most valuable player for a team or league. In software development, however, MVP is the minimal viable product you can deliver to customers in an initial release. It provides only the core features an application needs to satisfy user requirements. It also must be bug-free and look polished. An MVP release has a much higher quality and functionality standard than a POC. You’ve likely run into this acronym outside of the technical world. It has a different meaning for software developers employed in the retail industry. Point of sale machines are essentially cash registers, although the term can apply to any cell phone, mobile or embedded device that can handle product payments. Hopefully this list of 11 technology acronyms commonly heard around software development projects will help you better understand the conversations you have with developers and product owners in your daily scrums and standup meetings.  Learn Apache Maven Fast! Rust or Ruby? Go or Groovy? As the competitive IT landscape evolves, developers can enhance their skills and career potential by ... Authorization is a critical security component of a microservices architecture. Follow these five guiding principles to deploy ... Managing microservices without API gateways might be uncommon, but not unheard of. Consider the benefits, downsides and available... Kernel mode exists to keep user applications from disrupting critical system functions. Learn how each state works and what can ... After the recent CrowdStrike outage, organizations are keen to prevent and prepare for potential future disruptions. These key ... Many organizations begin their DevOps journey with a continuous integration and delivery pipeline. Before getting started, ... HPE is buying Morpheus Data, its second hybrid cloud management acquisition for GreenLake in less than two years following the ... The better your cloud-native development process is, the more efficient and reliable your application is likely to be. Follow ... The different types of private cloud offer varying levels of control, customization and convenience. These factors affect the ... Data is one of the most important assets in any organization. To truly protect it, you need a DDR strategy. Here's what you need ... Does your organization need every cloud security platform and service currently in use? Tool consolidation can reduce the chances... Following several high-profile attacks across the globe on MFA-less accounts, Microsoft will make the security measure mandatory ... Compare Datadog vs. New Relic capabilities including alerts, log management, incident management and more. Learn which tool is ... Many organizations struggle to manage their vast collection of AWS accounts, but Control Tower can help. The service automates ... There are several important variables within the Amazon EKS pricing model. Dig into the numbers to ensure you deploy the service ... All Rights Reserved, 
Copyright 2000 - 2024, TechTarget


Privacy Policy



Cookie Preferences 



Cookie Preferences 



Do Not Sell or Share My Personal Information
