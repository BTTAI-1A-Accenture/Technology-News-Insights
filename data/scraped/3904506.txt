
                Agree & Join LinkedIn
               
      By clicking Continue to join or sign in, you agree to LinkedIn’s User Agreement, Privacy Policy, and Cookie Policy.
     
                Create your free account or sign in to continue your search
                 
              or
             
      By clicking Continue to join or sign in, you agree to LinkedIn’s User Agreement, Privacy Policy, and Cookie Policy.
     
                New to LinkedIn? Join now
 
                  or
                 
      By clicking Continue to join or sign in, you agree to LinkedIn’s User Agreement, Privacy Policy, and Cookie Policy.
     
              New to LinkedIn? Join now
 Before delving into the fascinating history of JavaScript, it’s essential to grasp the intensity of the web browser competition during the 1990s. 1989: Tim Berners-Lee proposed the concept of the World Wide Web while working at CERN (the European Organization for Nuclear Research). 1990: Tim Berners-Lee wrote the first web browser and web server software. The browser was called "WorldWideWeb" (later renamed "Nexus") and was made available to a limited audience. 1991: The first web page outside of CERN was published, and more people gained access to the World Wide Web. The web started to gain attention and popularity. 1993: The Mosaic web browser, developed by a team at the National Center for Supercomputing Applications (NCSA) at the University of Illinois Urbana-Champaign, was released. Mosaic's graphical user interface and support for images made it more user-friendly and contributed significantly to the web's rapid expansion. 1994: The lead developer (Marc Andreessen) of Mosaic founded a company called Netscape. Release a more polished browser called Netscape Navigator. Web pages were static, and there was no dynamic or interactivity after a page loaded. 1995: Netscape Communications realized the browser needed a language to make it more dynamic. The company recruited Brendan Eich with the goal of embedding the Scheme programming language in Netscape Navigator. Before starting his work, Netscape Communications collaborated with Sun Microsystems (which was acquired By Oracle) to compete with Microsoft. So then the plan was to create a language complementing Java. Based on that, JavaScript was created by Brendan Eich in September 1995. He took inspiration from three languages—Java, Self, and Scheme—to create JavaScript. JavaScript derives its syntax from Java, its first-class functions from Scheme, and its prototype-based inheritance from Self. The name JavaScript is a result of marketing strategies. At the beginning, Brendan Eich called it Mocha (a code name). Inside Netscape, they used the name LiveScript. Yet, when they had to choose a public name, “JavaScript” was the winner. Why? This language was made to interest Java programmers, and “script” was trendy for describing lightweight programs back then. These lightweight “scripts” were the first to be put into pages on this new thing called the web! On September 18, 1995, Netscape Communications Corporation released the Netscape Navigator 2.0 web browser. In August 1995, Microsoft launched its browser, Internet Explorer. JavaScript Fundamentally changed the user experience of the web, and Microsoft wanted the same for Internet Explorer. Microsoft reverse-engineered the navigator interpreter to create its own scripting language called JScript, which makes it difficult for developers to make their websites work well in both browsers. During the early days of the web, competition between browser vendors was intense. Netscape’s Navigator and Microsoft’s Internet Explorer were two major players in this space. Both browsers implemented JavaScript, but Microsoft reverse-engineered Netscape’s JavaScript interpreter to create their own version for Internet Explorer. This raised compatibility issues and threatened to fragment the web as developers had to deal with two different implementations of the same language. To address this issue and promote a consistent and standardized approach, Netscape decided to submit JavaScript to ECMA for standardization in November 1996. By creating a standardized specification for JavaScript, Netscape aimed to encourage other browser vendors, including Microsoft, to adopt the standardized version. This would reduce the fragmentation caused by different implementations of the same language and ensure a more consistent experience for web developers and users across different browsers. ECMA is an international standards organization. Its purpose is to create and maintain standards for information and communication technology. It ensures that technologies are consistent, interoperable, and well-documented, benefiting industries and users by promoting compatibility and innovation. Every time there’s something new to set standards for, ECMA gives out a standard guide (or specification) and puts together a group of experts called a committee. In case of JavaScript, the standard is ECMA-262 and The committee that works on ECMA-262 called Technical Committee 39 (TC39) ECMA Decided to use the term ECMAScript to talk about the official language because Oracle (which acquired Sun Microsystems) owns the trademark for the term JavaScript.  The ECMAScript programming language has undergone a series of advancements and updates since its inception. Here’s a brief overview of its evolution: 1. ECMAScript 1 (1997) The journey began in 1997 with the release of ECMAScript 1. This inaugural version laid the foundation for the language and introduced essential features that formed the basis for future developments. 2. ECMAScript 2 (1998) A year later, ECMAScript 2 was introduced, building upon the groundwork laid by its predecessor. This version refined existing features and potentially added new elements to enhance the language’s capabilities. 3. ECMAScript 3 (1999) In 1999, ECMAScript 3 was released, further refining and standardizing the language. This version solidified the core features and set the stage for more significant changes in the future. 4. ECMAScript 4 (Abandoned) Although planned, ECMAScript 4 never saw the light of day. This version was abandoned during development and never finalized due to disagreements and challenges among stakeholders. The development efforts were redirected towards other iterations of the language. 5. ECMAScript 5 (2009) After a hiatus, ECMAScript 5 was released in 2009. This version brought substantial improvements and introduced features that enhanced the language’s functionality and performance. It played a pivotal role in modernizing ECMAScript. 6. ECMAScript 6 (2015) ECMAScript 6, also known as ES6 or ECMAScript 2015, marked a significant milestone in the language’s evolution. Released in 2015, it introduced a plethora of new features, syntax enhancements, and programming paradigms, making ECMAScript more powerful and versatile. 7. Subsequent Versions (Starting from 2016) Since 2016, the ECMAScript language has followed a pattern of releasing a new version approximately every year. These subsequent versions have continued to bring refinements, new features, and improvements to the language, catering to the evolving needs of developers and the rapidly changing landscape of web development. The evolution of ECMAScript showcases its adaptability and responsiveness to the demands of the programming community. With each version, the language evolves, enabling developers to write more efficient, expressive, and feature-rich code.        -- Es6 is very significant in the advancement of JavaScript and especially adding of library and many framework make JavaScript the best ever programming language on planet earth. 
        To view or add a comment, sign in
 Stay updated on your professional world 
      By clicking Continue to join or sign in, you agree to LinkedIn’s User Agreement, Privacy Policy, and Cookie Policy.
     
        New to LinkedIn? Join now
 