
                Agree & Join LinkedIn
               
      By clicking Continue to join or sign in, you agree to LinkedIn’s User Agreement, Privacy Policy, and Cookie Policy.
     
                Create your free account or sign in to continue your search
                 
              or
             
      By clicking Continue to join or sign in, you agree to LinkedIn’s User Agreement, Privacy Policy, and Cookie Policy.
     
                New to LinkedIn? Join now
 
                  or
                 
      By clicking Continue to join or sign in, you agree to LinkedIn’s User Agreement, Privacy Policy, and Cookie Policy.
     
              New to LinkedIn? Join now
 In the "Basic Pentesting" Machine on TryHackMe, participants acquire key skills: Brute Forcing: Learning systematic password guessing. Hash Cracking: Decrypting hashed passwords. Service Enumeration: Identifying open ports and services. Linux Enumeration: Exploring Linux system details. These skills form the foundation of penetration testing, equipping learners with essential techniques for ethical hacking endeavors. PORT ENUMERATION Commencing with a straightforward port enumeration, we leverage a fundamental parameter, -Pn. This foundational technique involves probing a target system to uncover active network ports, disregarding any form of host discovery. The -Pn parameter serves as a potent tool, allowing us to interact with the target system without relying on initial host responsiveness, potentially providing insights into concealed services. EXPLORING WEB DIRECTORIES WITH GOBUSTER The provided command, gobuster dir -u http://10.10.31.166 -w /usr/share/wordlists/dirb/common.txt -t 50, encapsulates an essential operation in penetration testing and cybersecurity: directory enumeration using the Gobuster tool. This technique involves systematically searching for hidden or accessible directories and files on a target web server.  EXPLORING SMB SHARES AND RETRIEVING FILES USING SMBCLIENT smbclient -L //10.10.31.166/: This command initiates a scan of the SMB shares on the target machine with IP address 10.10.31.166. The -L flag indicates that you're requesting a list of available shares on the specified IP. smbclient //10.10.31.166/Anonymous: Following the share enumeration, this command connects to a specific SMB share named "Anonymous" on the target machine. You're attempting to access this share to retrieve files or perform other operations. The //10.10.31.166/Anonymous notation signifies the path to the "Anonymous" share on the target. get staff.txt: Within the "Anonymous" share, this command attempts to retrieve the file named "staff.txt" and bring it to your local system. The get command instructs smbclient to fetch the specified file from the remote share. BRUTE FORCE ATTACK USING HYDRA FOR SSH ACCESS Taking a look of the file we discovered "jan" as possible user.  In this operation, we employed the powerful tool hydra to perform a brute force attack on an SSH service hosted on the target system with the IP address 10.10.31.166.  By executing this command, you launched a brute force attack that systematically tested different combinations of the "jan" username and passwords from the "rockyou.txt" wordlist against the SSH service on the target machine. The password is "armando". Hint: The other user is obviously "Kay" SECURE ACCESS VIA SSH USING PASSWORD AUTHENTICATION By executing this command, we initiated an SSH session to the target system with the username "jan." This type of access requires a valid password for the provided username to proceed. In this case the password would be the one we discovered previously (armando). RETRIEVING AND VIEWING SSH KEY  We executed a series of commands to navigate to a specific directory, retrieve a file, and display its content. Let's break down the commands and their implications: cd /home/kay/.ssh: This command changes the current directory to /home/kay/.ssh. This directory is commonly associated with SSH configuration and keys. cat id_rsa: Following the change of directory, this command employs the cat command to display the content of the file named id_rsa. In the context of SSH, id_rsa often refers to a private SSH key associated with a user. DECRYPTING AND LEVERAGING SSH PRIVATE KEY FOR ACCESS In this operation, we executed a sequence of commands to decrypt and utilize an SSH private key to gain access to a remote system. Let's break down each step: nano KayPrivateKey: This command suggests using the nano text editor to work with the file KayPrivateKey. We copied paste the Private key on that file. ssh2john KayPrivateKey > privatekey: Here, the ssh2john utility is employed to convert the SSH private key (KayPrivateKey) into a format that the John the Ripper password cracking tool can handle. The converted data is then redirected into a file named privatekey. john privatekey --wordlist=/usr/share/wordlists/rockyou.txt: The john command is utilized with the privatekey file and the provided wordlist rockyou.txt to attempt to crack the passphrase associated with the private key. john privatekey --show (KayPrivateKey:beeswax): This command displays the result of the password cracking attempt, indicating that the passphrase for the private key is beeswax. chmod 600 KayPrivateKey: This command modifies the permissions of the KayPrivateKey file, restricting access to the owner only. ssh -i KayPrivateKey kay@10.10.31.166: Finally, the ssh command connects to the remote system at IP address 10.10.31.166 using the decrypted private key (KayPrivateKey) and the username kay. The passphrase beeswax is used as the password. GETTING THE FINAL PASSWORD ﻿ 
        To view or add a comment, sign in
 Stay updated on your professional world 
      By clicking Continue to join or sign in, you agree to LinkedIn’s User Agreement, Privacy Policy, and Cookie Policy.
     
        New to LinkedIn? Join now
 