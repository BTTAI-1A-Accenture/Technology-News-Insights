A monthly overview of things you need to know as an architect or aspiring architect. View an example  
We protect your privacy.
 
                        Facilitating the Spread of Knowledge and Innovation in Professional Software Development
                       
Back to login
  
Back to login
 Jeremy Ruston explores what made the BBC Micro attractive and what can be learned from it today. Gregor Hohpe reflects on two decades working as an architect, ranging from the executive penthouse to the serverless engine room. The presenters discuss an introduction to incremental data processing, contrasting it with the two prevalent processing models of today - batch and stream data processing. In Jan 2023, we received word that we’d need to build a microblogging service to compete with Twitter in a couple of months. A small team was assembled to take on that challenge, and we shipped a new social network in July. This article describes how we developed and launched the Threads app at Meta last year. David Stenglein discusses the shift to a product model for internal platforms and how this benefits from people-centric tools like customer empathy and the new DevEx framework. Get clarity from senior software practitioners on today's critical dev priorities. Register Now. Level up your software skills by uncovering the emerging trends you should focus on. Register now. Discover emerging trends, insights, and real-world best practices in software development & tech leadership. Join now. Your monthly guide to all the topics, technologies and techniques that every professional needs to know about. Subscribe for free. 
InfoQ Homepage
Podcasts
Advice for Remote and Hybrid Leaders
 
							 Jul 14, 2023
						  Podcast with 


Julien Danjou

 by 


Shane Hastie

 In this podcast Shane Hastie, Lead Editor for Culture & Methods spoke to Julien Danjou of Mergify about creating good remote and hybrid working environments. Shane Hastie: Good day, folks. This is Shane Hastie for the InfoQ Engineering Culture Podcast. Today, I'm sitting down across many miles with Julien Danjou. Julien is the chief executor and founder of Mergify. Julien, I'll let you tell us a bit about yourself. Julien Danjou: Sure. Thank you. So I'm Julien, I'm 39 now. I'm getting older. I'm a software engineer. I started doing software engineering stuff 20 or 25 years ago now, and I started doing open-source work. Basically, that was my first task to doing a lot of toying with computers. I started this way. I think, for the last 20 years, I contributed to a lot of open-source project and worked in companies interested into open source. My last experience were working at Red Hat, Datadog and the Mergify that I founded a few years ago. Shane Hastie: We were chatting, before we started recording, about your experience working remotely in both remote first and hybrid environments. Do you want to tell us a little bit about that? Some of the good points and the challenges. Julien Danjou: That's a very, very wide topic. The way I started, it started for me when I started my career as a Debian developer like 20 years ago. I was still a student by then. And I joined the project as an engineer to help building Debian, all of that. And that's the first time I started to work with people that were around the globe, basically. I was based in France and I was working with people in the US, in Australia and wherever you want, basically. Which, I don't know, in my mind it was a game changer. You were able to start building stuff, software, with people not in the same office or classroom back then for me. But it was very weird feeling. And I started to discover working remotely with people this way, chatting over IRC, all of that. And then, it drew to me when I started to work. And the first company I joined was Red Hat where ... I mean, Red Hat has this culture of ... coming right straight from open source. Everybody is used to work asynchronously, which is a very funny way of working. It's way different than general people are used to work. And you also work with people ... Same thing, Red Hat is global. So I was in France, there are people in the US, people all over Europe. So, it was really growing on me this way of working. When we started Mergify a few years ago, my co-founder was also at the other side of France to me. So, we used to work together at Red Hat remotely, asynchronously and we started the company this way. In that case of Mergify, we started that as a full remote company. But I used to work, for example, at Datadog which is more hybrids, same for Red Hat. And all this working method and environment are very challenging in different ways. For example, I'll start with the hybrid approach where people are in the office or not in the office. How do you organize people so you do not end up with, what I call, second class citizen. Basically, it's very easy for people not being in the office to miss a lot of the water cooler chat. And we all know that a lot of things happen during those chats, basically. Maybe the coffee helps. But people talk and information is transmitted between people. Very important information that you might miss. I think people are just lazy to type everything on a keyboard, which makes sense. We're all like that. So, you really communicate the minimum amount of information over Slack, over Teams, whatever you use. Whereas, if you have to make conversation with somebody, you're just talking about topics and information to transmit, which is very important. And you don't do that when we are not in the office, basically. And if people are in the office, do that maybe every day because we like to go to the office every day but not into the ... Just go remote for a few days a week. And you have people on the other side of the spectrum which are never on the office because they can't go because, whatever, they're very far. Then, you have this kind of second-class citizen of people not getting the information that everyone knows. I have this anecdote. When I started to work 15 years ago, I used to work in an office and I had to move very far for a few months. So, I said to my boss, "I'm just going to move out." And it was very small company, we were like 12 people in the company. And I moved very far and I work remotely. I'm the only one being remote, and I live in this other city, a few miles from Paris. And one other guy from the other company, which was a neighbour of our office, comes near my place and say, "Do you want to have lunch?" So, we have lunch. And he say to me, "Do you know, by the way, why you hire this person?" And I was like, "My company hired this person? No, I don't know." "He's been there for like a month." And nobody ever told me, nobody sent an email saying, "We hired this guy. There's one new people in the office." And for a month I didn't know because I was not in the office. It was obvious for everyone, so nobody thought about sending an email because the guy was in the office. And that culture was not doing remote, all of that. So I mean, I don't blame them. But that's the kind of thing that you still find in hybrid places. That's all I can see. Shane Hastie: Hybrid is a challenge. What do we need to do to overcome some of those challenges? If we're stuck with hybrid, what do you think? Julien Danjou: I think it's very hard for hybrid to work because of that. So, there are people doing hybrid differently. For example, I know teams doing everybody goes to the office on Friday. Or the opposite, nobody goes on the office. So, you actually have the same schedule so you know people won't have the chance to miss all the recording information being transmitted, and there's a chance for one to be in the same place. So, that might work. There are the other aspects because you can also fix that, I think, with more process and being more ... Always think about people not in the office. And then, the percentage of people not being in the office matters.  If you have only 5% of the people not being in the office, you have this problem where people are just ignored if they're not in the office. If you have only, I don't know, 10, 20% of the people going into an office every day, then the culture can shift to being, "Okay. We're actually remote. But from time to time, we have a place where we can go and hang out together." So, the culture shifts a bit in the sense that you are more thinking about people not being there because you know that it's not the norm to be in the office. So, that's where you have to draw the line. And people doing hybrid you can go, from time to time in remote work, being in your home or whatever. And I think it makes very hard to go really into shifting the culture. It's also true if you start from that, we're just going to say, "There's a place where you can go work if you want from time to time." And people can sync up and say, "Okay, I'm going on the office on Monday." And then, your culture can be asynchronous, can be remote. Whereas, if you spend ... Which happened with the COVID thing where people were used to work in the office, then suddenly were like, "Okay. We're just being full remote, and then we go hybrid." And that's not your culture so you're just mixing everything. And it's very hard to turn a company culture from everybody is in the office, I don't need to send emails to transmit information, I don't have to think about people being there. Or maybe I'll leave a note if I know somebody on sick leave or whatever. But then, it's hard to transition to like, "No, I don't expect people to be right on same time zone as me. I'm going to expect people not to be there also." And you all changed the way you worked, basically, entirely. And when you have a lot of history because your company is not a startup, I think it makes it harder to switch to that mode. Shane Hastie: So when you founded Mergify, you did this with a very deliberate remote first. What are the challenges in working remote first and how do you overcome them? Julien Danjou: So when you are full remote, the challenges are a bit different. So, you don't have this second class citizen problem because everyone is on the same page. And I think it's very important, whatever your mode of working is, or actually that's my view, but everybody's on the same level of privilege. There's no people getting perks because they're going in the office and they got parties and free snacks and the others don't have anything. So you don't have this problem, nobody got free snacks. But then, the real issue for that, which you can also find in a hybrid approach, is how you connect people. So we are, I think, social animals. I'm a software engineer. Like many people in that area, I'm more introvert so I'm happy being alone for the whole day in my place. That's cool. But after a while, it drains you out. You feel disconnected from your work, from people, you don't talk to. Zoom and calls are a solution to that, but it's not having a barbecue with people. So it's very hard, when you build a remote company, to have this kind of connection with everyone. And you feel that worse when you go hybrid because you have connection with everyone who you see every day or every couple of days in the office, and not with the other people. So, it's a very weird dynamic in your teams if you are that. When you're full remote, everybody feels weird because everybody don't meet other people. So although we solved that at Mergify, I don't think there is a silver bullet. It really depends on the culture you want to build. It took us time. I think we started to build the team two years ago. So, it took us time to find the right pace and the right thing. We are a team of 11 people right now. The way we solved that is that we basically hired only people in France. Which was not deliberate choice at the beginning, but we were based in France, it was more natural for us to find people in France on network, all of that. So we realized that having everyone remote but in France was a chance because obviously it makes it easier to hire people when you don't have to look for people in a certain place. So, we were able to find a lot of talents everywhere. And then, we decided to every quarter meet in the same place. So what we do is that every quarter, so every three months, we find a place in France, anywhere, it could be a remote place in the country or near a mountain or whatever. We rent to house, a mansion, whatever we find. We rent that for week. So on Monday, everyone travels. Take the train, planes, car, whatever, go to that place. On one evening we do a small party, barbecue, whatever, to just meet and drink beers. And sometimes, we have people that just joined the team and they work for a month or two months and they never met anyone face-to-face, which is very weird to work in a place where you never shake the hand of anyone. So, we can do that on Monday. Then we work, chat, whatever, for the next three days. And on Friday, everybody gets back to their place. So we just take a train, car, whatever and go back. Which means we don't impact people on weekend or whatever to travel, which we don't want to do. We don't force people to come either. I have kids, people have kids, have a life. So if they can't come for a week, it's fine. So far, everybody, I mean, do the effort at least once or twice a year, most of the time, four times a year to come to that. Which is very great because it allows everyone to feel connected to each other. And it gives you this kind of creativeness you need for a startup where everyone really is fueled with that energy. And the next few weeks there's this high energy of people being connected together. And I think it's really nice to work together to boost that. And then, it just dries out after a few weeks. So, you have to restart this process and that's why we do that every three months. So it's a trade-off, because like I was saying, I have two kids, it makes it very hard for me to travel every weekend and for some people in the team. But I think good trade-off. For three months, you don't have to commute to any place. You can stay home, save a lot of time and all the perks that you get with remote work. On the other side, a week every three months you have to, I mean, move your ass somewhere. Shane Hastie: That intense period of bringing people together. You mentioned in that quite a lot of social interaction and deliberate social interaction. How much of that time is focused on work versus general social? Julien Danjou: I think it changed over the last edition that we had. The last time we spent a whole afternoon... For example, we were near Bordeaux, so we spent a whole afternoon going to a winery and seeing grape of wine and tasting wine, all of that for a whole afternoon just to have fun. We got to drink wine, obviously. So, we tend to focus more and more on less work. At the beginning, we were working too much for three days straight, just having conversation and working because we were very young and very, "Have to do that to survive. We're still a startup." So, we had to work a lot on different things. Now, we are still in that area but we're a larger team and it feels more important. I think we are growing and learning from that. So, we understand that it's very, very more important to spend that time with people having fun together and building connections and trusting each other for the next ... It's short term versus long term, basically. Short term you want to work, you want to spend time building stuff and have this technical conversation or product conversation or marketing conversation, which we do have, but it's fine to not have... You can have conversation at over time during the rest of the days of the time. I mean, Zoom is still there. So what you can't do the rest of the time, you need to do that. And I mean, visiting a winery, you can't do that over Zoom for sure, which would be not very fun. So, let's just do that. So, we do know focus more on that. We're not going to spend the three days not working et cetera, but we do spend time just chatting together. It's very hard to chat with 10 people over Zoom. I mean, the more you are... It's easier to do that face to face. So having this large conversation, transmitting the ideas, the vision of the company, the product, doing brainstorms it's easier face-to-face with a glass of wine or anything to chat to all of that. So we really emphasis, I would say, that part now during our week meeting. Shane Hastie: Thank you. Some interesting ideas there. Managing remote teams. You are a leader and, as you mentioned, you have been in the other side of that as well. You have been managed remotely. What are the challenges there? Julien Danjou: I've been managed remotely for a few years before running Mergify. I think really the pain point as being managed remotely is what I was saying, do you feel connected to your teammates? Or do you trust them? Or do you understand them, who they are? When I was young, I was thinking about my work, my job was to write software and the more I grew, the more I understand that we're just a team trying to solve a problem. And the way we solve the problem is by writing software. It's a by-product of who we are and what we do, but it's not necessarily the goal, the end goal. And to understand that and to do all of that, you have to feel connected to your teammates and to understand them. I'm not saying you have to be friends with anyone, that's not the goal. But there's a certain level of connection. You can't just ignore people and work alone. That's not what a team is. You can go very fast alone, but not very far. So, you have to work with other people. So when you are managed, I think there are expectations from your management teams in term, for example, meetings. I spent a period of my time at Red Hat where there was no budget for travel, for example. So, we were not able to meet. I spent two years without any budget for travel so I was not able to meet the other teammates. The culture was pre-COVID, so the culture was not a lot of Zoom and calls. So, mostly IRC. It's very hard to work with people just talking with text for years, for months and years over IRC and feel connected to your work, et cetera. So being managed like that, it makes very hard. You can be depressed and that's one other real problem, and I could feel depressed in that position and management not being able to see that or to acknowledge that because you don't see people with a sad face coming to the office. You just be on their desk and maybe don't talk to them for a week because you have this one-to-one meeting every week. So, it's very hard in that sense to be managed. I think if you are remote and you are very young and junior, it's very hard to be managed in remote because you have to be very mature and mature enough to say, "By the way, I have this problem." But nobody's going to see that because you are alone behind your desk. And that's true also for management. In Mergify, most of our engineers are senior -  five, eight years of experience. So, they're easy to manage in the sense that they're grown up. They don't expect us to come after us and see if everything's fine. They're going to raise their hand and say, "By the way, I have a problem." And say something over a meeting, over Slack, whatever. Which is not true for junior engineers. And for example, at Red Hat we saw that where basically it's very hard to hire junior engineers because most of the team I used to work in were full remotes. And it's very hard to mentor new engineers when you are remote because talking every day to them over IRC, Slack, or whatever makes it very hard to see if everything is fine. And they can... A junior feel ashamed of being stuck and just be stuck for two days behind their desk with a problem and just being blocked and waiting for something to happen. And you don’t have the contact that you can have in an office and just go to lunch and say, "By the way, this morning I have this problem. Do you have an idea on-" "Yeah sure. You should meet this guy." Or, "You should look at this." You don't have this conversation. It just don't happen. So if you have junior engineers, they're not going to have this conversation on their own because they don't know where the bar is, where is it okay to reach people and distract them like, "Hey, by the way, can I knock on your door and ask for help? Or I'm disturbing you and question is stupid." It's hard to assess that remotely. Whereas, you can just say a word or two in a real life conversation and see how the other person reacts by looking at their face. So, all these kinds of social cues you don't have. So, managing people or being managed is very hard and really depends on the level of seniorness that you have, basically. Shane Hastie: And advice for new managers. Julien Danjou: I think if you are a new manager managing a remote team, you really need to look... If you have junior people, really look very hard at how things are going. Because like I was saying, they're not going to necessarily raise their hand and say, "I have a problem." Et cetera. So, mentoring them is very important. One way of doing that might be, for example, having a buddy system where you find more senior engineer in the team and say, "Okay. You can just harass this person and ask them anything at any time by the rules. So you will never disturb them, you will never be a problem. So just ask anything." We do that, for example, for new people joining the team. They have a buddy that they can ask anything about the company itself, engineering problem, whatever. It's free. So there's no social problem being like, "Maybe I should not ask, maybe I will be bothering them." Or whatever. So, do something like that. Not with somebody that is the manager because you have this hierarchy which can block people from asking. That may be a good way of solving these kinds of problem. If you have more senior engineers or people to manage, I think that problem disappear a bit. People know what's acceptable, what's unacceptable. They're more autonomous, basically. Then, the problem is you have more senior people work with the other people in the team, and how do you connect everyone? Especially if you have people that are a bit introvert, all of that, which can stay two days without talking to anyone over on Slack. I mean, I've seen that. Just people... Working, actually. But just not talking to anyone for two days or three days, which is very weird. Imagine going to an office and there's a guy working and it doesn't talk, it's just like working. It's doing its job. But it's weird. So, you have to feel that and organize anything. So, we do things on site. If you can't do that... I think the goal as a manager is to animate the team, do things to... So, do party with them, do events,  whatever you can to build this sense of team. Always trying to build the team. And it takes a lot more effort than being in an office where you can just go, "Let's go grab a beer." And that's it. For example, I think what we tried last year was we played a bit with gather.town, which is a 2D world where we can move things around. Very fun. Didn't work for the long term for us because people were not using it.. They built-in escape game on that. And so, we did that with the whole team, solve the escape game for an hour, which was very fun. It was solving problems which are not the ones we solve in our day-to-day activities. So it was very cool cause you discover people on new angles, basically. And we discovered that the marketing guy could actually do math. Or I don't know, these kinds of fun stuff where you can... For the whole team, we're a small team so it's easy to do that with a cross team from everyone. But even if you have a team of engineers, you can just do things like that. Or even we do board games. There are board games online now, for a couple of hours at the end of the day, and just grab a drink and do that. It should be really part of your job to do that, to find an excuse for people to be together in the same... Either the same room, but least the same Zoom meeting and do something else than working just so they're able to connect and to know each other and trust each other beyond than just coding, for example. Shane Hastie: Some really useful, actionable advice there. And some good food for thought. If people would like to continue the conversation, where do they find you? Julien Danjou: To find me, just type my name on LinkedIn. I'm happy to connect and to have a chat. I'm also on Twitter. Well, I'm less active, but I'm also there. So if you want to ask me any questions, reach me out. Happy to answer. Shane Hastie: Wonderful. Thanks very much. Julien, thank you very much for taking the time to talk to us today. Julien Danjou: Thank you, Shane.   

 

												Continuous Delivery, Psychological Safety and Inclusive Leadership in Software Engineering
											
 

												Enhancing Team Dynamics and Psychological Safety in DevOps with Brittany Woods
											
 

												Founding and Growing an Engineering Company with Dr. Olga Kubassova
											
 

												Platform Engineering – Making Other Teams 10x Better
											
   
        A round-up of last week’s content on InfoQ sent out every Tuesday. Join a community of over 250,000 senior developers.
        
			View an example
  
We protect your privacy.
 A round-up of last week’s content on InfoQ sent out every Tuesday. Join a community of over 250,000 senior developers.
		
			View an example
  
We protect your privacy.
  InfoQ Dev Summit Munich September 26-27, 2024 InfoQ Dev Summit Munich is a two-day software conference featuring 22 technical talks sharing actionable insights on Generative AI, security, modern web apps, and more. Learn from senior developers facing the same challenges as you as they share proven tactics, not just trends, empowering you to make smart, focused choices for your immediate dev roadmap.Register Now 
					InfoQ.com and all content copyright © 2006-2024 C4Media Inc.
Privacy Notice, Terms And Conditions, Cookie Policy
